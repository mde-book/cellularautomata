// automatically generated by Xtext
grammar org.kermeta.language.sample.cellularautomata.rules.Evol with org.kermeta.language.sample.cellularautomata.rules.Core

import "platform:/resource/org.kermeta.language.sample.cellularautomata.rules.evolution.model/metamodel/rules_evol.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/org.kermeta.language.sample.cellularautomata.rules.core.model/metamodel/rules_core.ecore" as core


/**
 * Root for Evol
 */
 
CellularAutomata returns CellularAutomata:
	{CellularAutomata}
	rules+=Rule (rules+=Rule)*
;


/**
 * From Evol
 */

Rule returns core::Rule:
	'when' (filter=PopulationRange)? 'nextValue' '=' '{' evaluatedVal=Conditional '}';

PopulationRange returns PopulationRange:
	{PopulationRange}
	'[' (lowerRange=EInt)? ',' (upperRange=EInt)? ']';

LiteralsExpression returns core::IntegerExpression:
	'(' Conditional ')' | Max | Min | Sum | Size | CurrentCellPopulation | IntegerLiteral;

/*
 * Neighbors expressions
 */
 
Max returns Max:
	{Max}
	'neighborsMax' (neighborsFilter=PopulationRange)?;

Min returns Min:
	{Min}
	'neighborsMax' (neighborsFilter=PopulationRange)?;

Sum returns Sum:
	{Sum}
	'neighborsSum' (neighborsFilter=PopulationRange)?;

Size returns Size:
	{Size}
	'neighborsSize' (neighborsFilter=PopulationRange)?;

CurrentCellPopulation returns core::IntegerExpression:
	{CurrentCellPopulation} 'currentValue';